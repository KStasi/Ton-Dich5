#!/usr/bin/env fift -s
"./06_arrange_units_tests.fif" include

variable boards
variable new_players_state

// test # 0 send one result
{ <b swap 4 u, swap 16 u, swap 16 u, b> <s } : create-board
{ boards @ 4 udict!+ not abort"cannot add location to dictionary" boards ! } : add-board
// gold, level, exp, hp
{ <b swap 8 u, swap 8 u, swap 8 u, swap 8 u, b> <s } : create-updated-player
{ new_players_state @ 4 udict!+ not abort"cannot add location to dictionary" new_players_state ! } : add-updated-player

dictnew boards !
dictnew new_players_state !

// add boards
1 1 0 create-board
1 add-board

1 1 1 create-board
2 add-board

3 1 1 create-board
3 add-board

1 1 0 create-board
4 add-board

1 1 1 create-board
5 add-board

1 1 1 create-board
6 add-board

2 1 0 create-board
7 add-board

1 1 0 create-board
8 add-board

// add player states
90 100 1 3 create-updated-player
1 add-updated-player

94 120 1 3 create-updated-player
2 add-updated-player

50 106 2 4 create-updated-player
3 add-updated-player

0 150 1 2 create-updated-player
4 add-updated-player

90 150 1 3 create-updated-player
5 add-updated-player

70 105 1 3 create-updated-player
6 add-updated-player

70 100 3 3 create-updated-player
7 add-updated-player

75 109 1 3 create-updated-player
8 add-updated-player

1 player_idx !
1 game_idx !
<b 0xddeeee 32 u, 0 64 u, player_idx @ 8 u, game_idx @ 8 u, boards @ dict, new_players_state @ dict, b> 
<s int_msg_body !  

1 idx !
send-request
// test # 1 get result


// test # 2 send all results

// test # 3 check round results

// test # 4 check players count

// test # 5 check units count

// test # 6 check players units 

// test # 7 try start new round
